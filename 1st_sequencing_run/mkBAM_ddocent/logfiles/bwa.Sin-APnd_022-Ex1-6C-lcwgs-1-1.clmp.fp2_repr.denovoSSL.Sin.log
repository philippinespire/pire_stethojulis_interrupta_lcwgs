Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.denovoSSL.Sin.fasta
* Entering FMI_search
Reading other elements of the index from files reference.denovoSSL.Sin.fasta
* Index prefix: reference.denovoSSL.Sin.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.denovoSSL.Sin.fasta.0123
* Reference genome size: 2712659340 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 18.863 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 28.928 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 30.646 sec
3. Memory pre-allocation for BWT: 14206.6874 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000112, nseq: 4781162
	[0000][ M::kt_pipeline] read 4781162 sequences (400000112 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 400000135, nseq: 4686518
	[0000][ M::kt_pipeline] read 4686518 sequences (400000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4781162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (160, 1088129, 10, 146)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 37, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 99)
[0000][PE] mean and std.dev: (40.78, 20.69)
[0000][PE] low and high boundaries for proper pairs: (1, 124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (78.81, 24.65)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 194, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 539)
[0000][PE] mean and std.dev: (177.44, 76.30)
[0000][PE] low and high boundaries for proper pairs: (1, 672)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 38, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (41.84, 21.62)
[0000][PE] low and high boundaries for proper pairs: (1, 141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4781162 reads in 1344.088 CPU sec, 34.510 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000103, nseq: 4752836
	[0000][ M::kt_pipeline] read 4752836 sequences (400000103 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4686518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (112, 957407, 5, 120)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 36, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 109)
[0000][PE] mean and std.dev: (38.35, 17.97)
[0000][PE] low and high boundaries for proper pairs: (1, 137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (79.00, 24.82)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 32, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 108)
[0000][PE] mean and std.dev: (37.80, 22.13)
[0000][PE] low and high boundaries for proper pairs: (1, 136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4686518 reads in 1501.131 CPU sec, 39.243 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 156917718, nseq: 1847856
	[0000][ M::kt_pipeline] read 1847856 sequences (156917718 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4752836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (138, 1048900, 12, 138)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (24, 35, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 105)
[0000][PE] mean and std.dev: (38.10, 19.65)
[0000][PE] low and high boundaries for proper pairs: (1, 132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (78.82, 24.63)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (112, 216, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1288)
[0000][PE] mean and std.dev: (269.55, 214.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1680)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (23, 35, 49)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 101)
[0000][PE] mean and std.dev: (37.09, 18.90)
[0000][PE] low and high boundaries for proper pairs: (1, 127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4752836 reads in 1400.383 CPU sec, 36.963 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 1847856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 364172, 5, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 120)
[0000][PE] mean and std.dev: (43.06, 22.42)
[0000][PE] low and high boundaries for proper pairs: (1, 151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (78.81, 24.63)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 37, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 121)
[0000][PE] mean and std.dev: (42.12, 22.70)
[0000][PE] low and high boundaries for proper pairs: (1, 153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1847856 reads in 604.784 CPU sec, 16.768 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.697286 MHz
Runtime profile:

	Time taken for main_mem function: 213.24 sec

	IO times (sec) :
	Reading IO time (reads) avg: 40.92, (40.92, 40.92)
	Writing IO time (SAM) avg: 31.09, (31.09, 31.09)
	Reading IO time (Reference Genome) avg: 1.74, (1.74, 1.74)
	Index read time avg: 1.86, (1.86, 1.86)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 207.74
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 127.47, (127.47, 127.47)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 26.80, (26.80, 26.80)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 99.31, (99.31, 99.31)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 44.53, (44.72, 44.39)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 50.58, (50.80, 50.28)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
