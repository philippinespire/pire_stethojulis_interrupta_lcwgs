Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.denovoSSL.Sin.fasta
* Entering FMI_search
Reading other elements of the index from files reference.denovoSSL.Sin.fasta
* Index prefix: reference.denovoSSL.Sin.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.denovoSSL.Sin.fasta.0123
* Reference genome size: 2712659340 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 18.586 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 28.414 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 30.898 sec
3. Memory pre-allocation for BWT: 14206.6874 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000010, nseq: 4786752
	[0000][ M::kt_pipeline] read 4786752 sequences (400000010 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000150, nseq: 4742976
	[0000][ M::kt_pipeline] read 4742976 sequences (400000150 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4786752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 1338825, 11, 90)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 35, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 115)
[0000][PE] mean and std.dev: (38.37, 19.62)
[0000][PE] low and high boundaries for proper pairs: (1, 145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.74, 23.87)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 85, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 205)
[0000][PE] mean and std.dev: (58.44, 29.40)
[0000][PE] low and high boundaries for proper pairs: (1, 260)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 38, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 94)
[0000][PE] mean and std.dev: (36.39, 16.73)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4786752 reads in 843.797 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4742976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 1284910, 12, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (24, 37, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (43.98, 26.99)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.75, 23.83)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 292, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (259.55, 251.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (23, 38, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (37.14, 17.77)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000042, nseq: 4726150
	[0000][ M::kt_pipeline] read 4726150 sequences (400000042 bp)...
	[0000][ M::mem_process_seqs] Processed 4742976 reads in 916.654 CPU sec, 24.398 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4726150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1258433, 5, 97)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (24, 38, 47)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 93)
[0000][PE] mean and std.dev: (36.50, 18.21)
[0000][PE] low and high boundaries for proper pairs: (1, 116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 157)
[0000][PE] mean and std.dev: (80.60, 23.64)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 38, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 95)
[0000][PE] mean and std.dev: (38.67, 17.24)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000111, nseq: 4775932
	[0000][ M::kt_pipeline] read 4775932 sequences (400000111 bp)...
	[0000][ M::mem_process_seqs] Processed 4726150 reads in 949.973 CPU sec, 25.196 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4775932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1299492, 5, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 37, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 97)
[0000][PE] mean and std.dev: (39.54, 17.97)
[0000][PE] low and high boundaries for proper pairs: (1, 120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.73, 23.83)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 37, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 99)
[0000][PE] mean and std.dev: (40.40, 19.64)
[0000][PE] low and high boundaries for proper pairs: (1, 123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000012, nseq: 4765960
	[0000][ M::kt_pipeline] read 4765960 sequences (400000012 bp)...
	[0000][ M::mem_process_seqs] Processed 4775932 reads in 908.843 CPU sec, 24.440 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4765960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 1304864, 13, 83)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 40, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 98)
[0000][PE] mean and std.dev: (39.78, 20.52)
[0000][PE] low and high boundaries for proper pairs: (1, 122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.73, 23.84)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (138, 263, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (257.54, 119.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 37, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 95)
[0000][PE] mean and std.dev: (40.49, 17.83)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000273, nseq: 4769404
	[0000][ M::kt_pipeline] read 4769404 sequences (400000273 bp)...
	[0000][ M::mem_process_seqs] Processed 4765960 reads in 901.947 CPU sec, 24.189 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4769404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 1302627, 5, 89)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 37, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 116)
[0000][PE] mean and std.dev: (41.37, 21.18)
[0000][PE] low and high boundaries for proper pairs: (1, 146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 157)
[0000][PE] mean and std.dev: (80.61, 23.63)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 39, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 106)
[0000][PE] mean and std.dev: (41.68, 20.18)
[0000][PE] low and high boundaries for proper pairs: (1, 131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000196, nseq: 4634902
	[0000][ M::kt_pipeline] read 4634902 sequences (400000196 bp)...
	[0000][ M::mem_process_seqs] Processed 4769404 reads in 899.183 CPU sec, 24.132 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000049, nseq: 4701644
	[0000][ M::kt_pipeline] read 4701644 sequences (400000049 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4634902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 1119078, 9, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (41.14, 21.96)
[0000][PE] low and high boundaries for proper pairs: (1, 147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.85, 23.89)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 35, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 104)
[0000][PE] mean and std.dev: (39.13, 18.77)
[0000][PE] low and high boundaries for proper pairs: (1, 130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4634902 reads in 1133.619 CPU sec, 30.058 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000046, nseq: 4781588
	[0000][ M::kt_pipeline] read 4781588 sequences (400000046 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4701644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 1192376, 6, 106)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (23, 33, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 98)
[0000][PE] mean and std.dev: (34.56, 18.93)
[0000][PE] low and high boundaries for proper pairs: (1, 123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.76, 23.85)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 35, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 98)
[0000][PE] mean and std.dev: (38.49, 18.20)
[0000][PE] low and high boundaries for proper pairs: (1, 122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4701644 reads in 1031.941 CPU sec, 27.685 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4781588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 1327884, 9, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 104)
[0000][PE] mean and std.dev: (38.73, 21.14)
[0000][PE] low and high boundaries for proper pairs: (1, 130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 157)
[0000][PE] mean and std.dev: (80.55, 23.62)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 36, 46)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 80)
[0000][PE] mean and std.dev: (36.29, 15.48)
[0000][PE] low and high boundaries for proper pairs: (1, 98)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000146, nseq: 4708442
	[0000][ M::kt_pipeline] read 4708442 sequences (400000146 bp)...
	[0000][ M::mem_process_seqs] Processed 4781588 reads in 861.578 CPU sec, 23.350 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4708442
[0000] read_chunk: 400000000, work_chunk_size: 400000103, nseq: 4743792
	[0000][ M::kt_pipeline] read 4743792 sequences (400000103 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1226520, 12, 95)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 35, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (41.01, 22.55)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.75, 23.82)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 420, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1132)
[0000][PE] mean and std.dev: (405.36, 248.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1429)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 39, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (43.04, 21.96)
[0000][PE] low and high boundaries for proper pairs: (1, 137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4708442 reads in 1004.542 CPU sec, 26.688 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4743792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 1266909, 12, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 38, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 94)
[0000][PE] mean and std.dev: (39.04, 18.40)
[0000][PE] low and high boundaries for proper pairs: (1, 116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 157)
[0000][PE] mean and std.dev: (80.60, 23.65)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (174, 274, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 891)
[0000][PE] mean and std.dev: (269.09, 226.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1176)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 37, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 101)
[0000][PE] mean and std.dev: (38.12, 19.26)
[0000][PE] low and high boundaries for proper pairs: (1, 126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000160, nseq: 4703282
	[0000][ M::kt_pipeline] read 4703282 sequences (400000160 bp)...
	[0000][ M::mem_process_seqs] Processed 4743792 reads in 968.340 CPU sec, 26.071 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4703282
[0000] read_chunk: 400000000, work_chunk_size: 380635675, nseq: 4533600
	[0000][ M::kt_pipeline] read 4533600 sequences (380635675 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 1169098, 7, 75)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 38, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 91)
[0000][PE] mean and std.dev: (39.22, 15.77)
[0000][PE] low and high boundaries for proper pairs: (1, 111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (80.76, 23.86)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 37, 49)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 93)
[0000][PE] mean and std.dev: (37.89, 16.13)
[0000][PE] low and high boundaries for proper pairs: (1, 115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4703282 reads in 1057.700 CPU sec, 28.418 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4533600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 1224779, 8, 85)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (20, 29, 41)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 83)
[0000][PE] mean and std.dev: (30.20, 17.01)
[0000][PE] low and high boundaries for proper pairs: (1, 104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 157)
[0000][PE] mean and std.dev: (80.60, 23.63)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 36, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 94)
[0000][PE] mean and std.dev: (37.60, 16.94)
[0000][PE] low and high boundaries for proper pairs: (1, 116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4533600 reads in 883.647 CPU sec, 24.166 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.733564 MHz
Runtime profile:

	Time taken for main_mem function: 418.64 sec

	IO times (sec) :
	Reading IO time (reads) avg: 160.59, (160.59, 160.59)
	Writing IO time (SAM) avg: 96.53, (96.53, 96.53)
	Reading IO time (Reference Genome) avg: 1.88, (1.88, 1.88)
	Index read time avg: 1.86, (1.86, 1.86)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 412.95
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 330.87, (330.87, 330.87)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 74.53, (74.53, 74.53)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 250.55, (250.55, 250.55)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 113.85, (114.36, 113.56)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 126.62, (126.95, 126.17)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
