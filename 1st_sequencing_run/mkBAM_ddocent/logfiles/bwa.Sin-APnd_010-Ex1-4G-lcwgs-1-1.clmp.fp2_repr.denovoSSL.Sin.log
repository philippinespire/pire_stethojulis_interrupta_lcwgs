Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.denovoSSL.Sin.fasta
* Entering FMI_search
Reading other elements of the index from files reference.denovoSSL.Sin.fasta
* Index prefix: reference.denovoSSL.Sin.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.denovoSSL.Sin.fasta.0123
* Reference genome size: 2712659340 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 18.580 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 25.749 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 26.265 sec
3. Memory pre-allocation for BWT: 14206.6874 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000031, nseq: 4841404
	[0000][ M::kt_pipeline] read 4841404 sequences (400000031 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 400000090, nseq: 4758008
	[0000][ M::kt_pipeline] read 4758008 sequences (400000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4841404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (137, 1227497, 8, 139)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 33, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 121)
[0000][PE] mean and std.dev: (39.71, 24.32)
[0000][PE] low and high boundaries for proper pairs: (1, 153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.92, 25.19)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 40, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (44.99, 24.49)
[0000][PE] low and high boundaries for proper pairs: (1, 160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4841404 reads in 1180.434 CPU sec, 30.530 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000118, nseq: 4831270
	[0000][ M::kt_pipeline] read 4831270 sequences (400000118 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4758008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (153, 1126584, 12, 129)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 38, 51)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 101)
[0000][PE] mean and std.dev: (38.93, 20.61)
[0000][PE] low and high boundaries for proper pairs: (1, 126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.99, 25.20)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 155, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (247.50, 213.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 39, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 122)
[0000][PE] mean and std.dev: (43.72, 25.87)
[0000][PE] low and high boundaries for proper pairs: (1, 154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4758008 reads in 1309.335 CPU sec, 34.472 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000003, nseq: 4748578
	[0000][ M::kt_pipeline] read 4748578 sequences (400000003 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4831270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (143, 1191014, 11, 145)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 35, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 107)
[0000][PE] mean and std.dev: (38.20, 20.03)
[0000][PE] low and high boundaries for proper pairs: (1, 134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.93, 25.22)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (92, 228, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1919)
[0000][PE] mean and std.dev: (332.36, 301.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 34, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 94)
[0000][PE] mean and std.dev: (36.39, 17.09)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4831270 reads in 1234.697 CPU sec, 32.636 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000055, nseq: 4672494
	[0000][ M::kt_pipeline] read 4672494 sequences (400000055 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4748578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (123, 1074005, 6, 141)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (23, 35, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (37.82, 20.83)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (79.00, 25.17)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 36, 49)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 95)
[0000][PE] mean and std.dev: (38.60, 18.19)
[0000][PE] low and high boundaries for proper pairs: (1, 118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4748578 reads in 1390.314 CPU sec, 36.807 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000090, nseq: 4765432
	[0000][ M::kt_pipeline] read 4765432 sequences (400000090 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4672494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (135, 1015704, 7, 128)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 36, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 111)
[0000][PE] mean and std.dev: (39.31, 21.40)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (79.04, 25.25)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 36, 46)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 84)
[0000][PE] mean and std.dev: (37.29, 16.45)
[0000][PE] low and high boundaries for proper pairs: (1, 103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4672494 reads in 1406.160 CPU sec, 37.388 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000013, nseq: 4786004
	[0000][ M::kt_pipeline] read 4786004 sequences (400000013 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4765432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 1125372, 10, 131)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 35, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (40.63, 24.75)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.99, 25.21)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (115, 472, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1690)
[0000][PE] mean and std.dev: (335.33, 234.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 37, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 105)
[0000][PE] mean and std.dev: (39.67, 19.76)
[0000][PE] low and high boundaries for proper pairs: (1, 131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4765432 reads in 1317.923 CPU sec, 35.034 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 290776333, nseq: 3441594
	[0000][ M::kt_pipeline] read 3441594 sequences (290776333 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4786004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (123, 1138907, 8, 125)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 34, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 100)
[0000][PE] mean and std.dev: (38.32, 20.95)
[0000][PE] low and high boundaries for proper pairs: (1, 125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.92, 25.21)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 35, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 102)
[0000][PE] mean and std.dev: (39.71, 20.29)
[0000][PE] low and high boundaries for proper pairs: (1, 127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4786004 reads in 1312.294 CPU sec, 34.910 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 3441594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 743805, 6, 87)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 37, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 108)
[0000][PE] mean and std.dev: (39.95, 20.54)
[0000][PE] low and high boundaries for proper pairs: (1, 135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (78.98, 25.17)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 35, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 98)
[0000][PE] mean and std.dev: (37.55, 20.11)
[0000][PE] low and high boundaries for proper pairs: (1, 122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3441594 reads in 1029.680 CPU sec, 27.909 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.714588 MHz
Runtime profile:

	Time taken for main_mem function: 348.78 sec

	IO times (sec) :
	Reading IO time (reads) avg: 96.88, (96.88, 96.88)
	Writing IO time (SAM) avg: 68.97, (68.97, 68.97)
	Reading IO time (Reference Genome) avg: 1.82, (1.82, 1.82)
	Index read time avg: 1.93, (1.93, 1.93)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 343.10
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 269.65, (269.65, 269.65)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 57.27, (57.27, 57.27)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 209.01, (209.01, 209.01)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 91.25, (91.71, 90.97)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 108.94, (109.33, 108.62)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
