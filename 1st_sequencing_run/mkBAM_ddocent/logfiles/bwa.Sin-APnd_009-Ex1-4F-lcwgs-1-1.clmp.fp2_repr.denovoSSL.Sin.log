Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.denovoSSL.Sin.fasta
* Entering FMI_search
Reading other elements of the index from files reference.denovoSSL.Sin.fasta
* Index prefix: reference.denovoSSL.Sin.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.denovoSSL.Sin.fasta.0123
* Reference genome size: 2712659340 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 18.714 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 25.956 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 32.298 sec
3. Memory pre-allocation for BWT: 14206.6874 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000143, nseq: 4898162
	[0000][ M::kt_pipeline] read 4898162 sequences (400000143 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000130, nseq: 4932212
	[0000][ M::kt_pipeline] read 4932212 sequences (400000130 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4898162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1280234, 7, 79)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 34, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 118)
[0000][PE] mean and std.dev: (40.51, 23.19)
[0000][PE] low and high boundaries for proper pairs: (1, 149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.20, 23.93)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 35, 47)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 89)
[0000][PE] mean and std.dev: (38.72, 18.83)
[0000][PE] low and high boundaries for proper pairs: (1, 114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4898162 reads in 1026.940 CPU sec, 26.630 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000083, nseq: 4827670
	[0000][ M::kt_pipeline] read 4827670 sequences (400000083 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4932212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 1308134, 7, 69)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 36, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 118)
[0000][PE] mean and std.dev: (39.10, 22.87)
[0000][PE] low and high boundaries for proper pairs: (1, 149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.17, 23.94)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (23, 34, 50)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 104)
[0000][PE] mean and std.dev: (36.54, 18.30)
[0000][PE] low and high boundaries for proper pairs: (1, 131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4932212 reads in 992.343 CPU sec, 25.854 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000052, nseq: 4900828
	[0000][ M::kt_pipeline] read 4900828 sequences (400000052 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4827670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 1175614, 5, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 90)
[0000][PE] mean and std.dev: (35.38, 16.73)
[0000][PE] low and high boundaries for proper pairs: (1, 111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.26, 24.00)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 45)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 83)
[0000][PE] mean and std.dev: (34.74, 17.75)
[0000][PE] low and high boundaries for proper pairs: (1, 106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4827670 reads in 1167.563 CPU sec, 30.767 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000073, nseq: 4872654
	[0000][ M::kt_pipeline] read 4872654 sequences (400000073 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4900828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 1256466, 9, 75)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 37, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 107)
[0000][PE] mean and std.dev: (38.21, 18.16)
[0000][PE] low and high boundaries for proper pairs: (1, 134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.20, 23.95)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 31, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 94)
[0000][PE] mean and std.dev: (36.85, 18.49)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4900828 reads in 1061.661 CPU sec, 28.413 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 227011133, nseq: 2761190
	[0000][ M::kt_pipeline] read 2761190 sequences (227011133 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4872654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 1232040, 5, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (21, 32, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 120)
[0000][PE] mean and std.dev: (37.19, 24.76)
[0000][PE] low and high boundaries for proper pairs: (1, 153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.16, 23.96)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 33, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (38.02, 18.35)
[0000][PE] low and high boundaries for proper pairs: (1, 141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4872654 reads in 1106.163 CPU sec, 29.793 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 2761190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 664966, 3, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (19, 33, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 166)
[0000][PE] mean and std.dev: (40.00, 29.08)
[0000][PE] low and high boundaries for proper pairs: (1, 215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 76, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (78.19, 23.91)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 36, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 101)
[0000][PE] mean and std.dev: (39.70, 16.35)
[0000][PE] low and high boundaries for proper pairs: (1, 125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2761190 reads in 661.723 CPU sec, 18.288 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.733300 MHz
Runtime profile:

	Time taken for main_mem function: 250.09 sec

	IO times (sec) :
	Reading IO time (reads) avg: 68.17, (68.17, 68.17)
	Writing IO time (SAM) avg: 39.52, (39.52, 39.52)
	Reading IO time (Reference Genome) avg: 1.83, (1.83, 1.83)
	Index read time avg: 1.88, (1.88, 1.88)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 244.45
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 159.72, (159.72, 159.72)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 34.49, (34.49, 34.49)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 122.76, (122.76, 122.76)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 53.02, (53.37, 52.86)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 64.54, (64.90, 64.24)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
