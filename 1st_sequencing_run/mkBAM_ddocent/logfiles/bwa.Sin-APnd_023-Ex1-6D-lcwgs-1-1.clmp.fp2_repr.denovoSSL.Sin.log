Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.denovoSSL.Sin.fasta
* Entering FMI_search
Reading other elements of the index from files reference.denovoSSL.Sin.fasta
* Index prefix: reference.denovoSSL.Sin.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.denovoSSL.Sin.fasta.0123
* Reference genome size: 2712659340 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 18.916 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 29.132 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 30.681 sec
3. Memory pre-allocation for BWT: 14206.6874 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000055, nseq: 4672904
	[0000][ M::kt_pipeline] read 4672904 sequences (400000055 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 400000154, nseq: 4710676
	[0000][ M::kt_pipeline] read 4710676 sequences (400000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4672904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 1118181, 8, 100)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 36, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (40.27, 24.37)
[0000][PE] low and high boundaries for proper pairs: (1, 141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.19, 24.88)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 33, 44)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 84)
[0000][PE] mean and std.dev: (34.91, 16.36)
[0000][PE] low and high boundaries for proper pairs: (1, 104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4672904 reads in 1238.702 CPU sec, 31.880 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000169, nseq: 4558776
	[0000][ M::kt_pipeline] read 4558776 sequences (400000169 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4710676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1135152, 8, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 36, 52)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 106)
[0000][PE] mean and std.dev: (39.91, 22.27)
[0000][PE] low and high boundaries for proper pairs: (1, 133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.18, 24.91)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 38, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (40.34, 22.28)
[0000][PE] low and high boundaries for proper pairs: (1, 148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4710676 reads in 1232.233 CPU sec, 32.329 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000062, nseq: 4657328
	[0000][ M::kt_pipeline] read 4657328 sequences (400000062 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4558776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 931771, 6, 86)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (22, 35, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 115)
[0000][PE] mean and std.dev: (36.24, 22.38)
[0000][PE] low and high boundaries for proper pairs: (1, 146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 79, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.26, 24.91)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 39, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 114)
[0000][PE] mean and std.dev: (42.77, 20.19)
[0000][PE] low and high boundaries for proper pairs: (1, 142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4558776 reads in 1466.544 CPU sec, 38.118 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000199, nseq: 4667092
	[0000][ M::kt_pipeline] read 4667092 sequences (400000199 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4657328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 1088969, 8, 106)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (21, 33, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 102)
[0000][PE] mean and std.dev: (34.50, 20.42)
[0000][PE] low and high boundaries for proper pairs: (1, 129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.22, 24.89)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 36, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 86)
[0000][PE] mean and std.dev: (37.60, 15.65)
[0000][PE] low and high boundaries for proper pairs: (1, 105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4657328 reads in 1297.525 CPU sec, 34.151 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 58674913, nseq: 683012
	[0000][ M::kt_pipeline] read 683012 sequences (58674913 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 4667092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 1033259, 7, 98)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (21, 32, 45)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 93)
[0000][PE] mean and std.dev: (32.99, 18.46)
[0000][PE] low and high boundaries for proper pairs: (1, 117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.18, 24.91)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 36, 48)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 96)
[0000][PE] mean and std.dev: (37.84, 19.23)
[0000][PE] low and high boundaries for proper pairs: (1, 120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4667092 reads in 1359.253 CPU sec, 35.686 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1356329670, n: 683012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 160563, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (21, 31, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (34.95, 17.72)
[0000][PE] low and high boundaries for proper pairs: (1, 149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (64, 78, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (81.23, 24.93)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (14, 27, 42)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 98)
[0000][PE] mean and std.dev: (30.76, 23.70)
[0000][PE] low and high boundaries for proper pairs: (1, 126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 683012 reads in 196.718 CPU sec, 6.861 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.873002 MHz
Runtime profile:

	Time taken for main_mem function: 265.96 sec

	IO times (sec) :
	Reading IO time (reads) avg: 62.33, (62.33, 62.33)
	Writing IO time (SAM) avg: 39.95, (39.95, 39.95)
	Reading IO time (Reference Genome) avg: 1.75, (1.75, 1.75)
	Index read time avg: 1.84, (1.84, 1.84)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 260.43
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 178.99, (178.99, 178.99)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 37.74, (37.74, 37.74)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 139.17, (139.17, 139.17)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 61.89, (62.31, 61.59)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 71.59, (71.98, 71.15)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
